---
layout: post
title:  "js 数组"
date:   2018-09-03 14:49:45 +0200
categories: hpxuan
---
 Array对象自带的方法  
 var arr = [0,1,2];  
 1. 1、 pop():删除数组的最后一个元素，减少数组的长度，返回删除的值。  
 2. 2、 push(3):将参数加载到数组的最后，返回新数组的长度。  
 3. 3、 shift():删除数组的第一个元素,返回删除的值，同时数组长度减一。  
 4. 4、 unshift(a):把参数加载数组的前面，返回新数组的长度。  
 5. 5、 sort()：按指定的参数对数组进行排序 ，返回的值是经过排序之后的数组。  
 6. 6、 concat(3,4)：把两个数组拼接起来。 返回的值是一个副本。  
 7. 7、 slice(start,end)：返回从原数组中指定开始下标到结束下标之间的项组成的新数组  
 8. 8、 reverse()：反转数组项的顺序，返回的值是经过排序之后的数组  
 9. 9、 indexOf()和lastIndexOf() ， 两个参数，要查找的项(可选)和查找起点位置的索引  
 10. indexOf()：从数组开头向后查找。 lastIndexOf()：从数组末尾开始向前查找  
 11. 10、 every()：对数组中的每一项运行 ** 给定函数 ** ，如果该函数对每一项都返回true，则返回true。

 0. 11、 splice():方法向/从数组中添加/删除项目，然后返回被删除的项目。  
 1. 12、 filter()：对数组中的每一项运行 ** 给定函数 ** ，返回该函数会返回true的项组成数组。  
 2. 13、 forEach()：对数组的每一项运行给定函数，这个方法没有返回值。  
 3. 14、 map()：对数组的每一项运行给定函数，返回每次函数调用的结果组成的数组。  
 4. 15、 some()：对数组的每一项运行给定参数，如果该函数对任一项返回true，则返回true。  

 reduce() 和 reduceRight()：缩小数组的方法，这两个方法都会迭代数组的所有项，然后构建一个最终返回的值。  
 1. reduce(function) 接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。
 2. reduceRight(function) 功能和 reduce() 功能是一样的，不同的是从数组的末尾向前将数组中的数组项做累加。  

 join(separator)：将数组的元素组起一个字符串，以separator为分隔符，省略的话则用默认用逗号为分隔符
